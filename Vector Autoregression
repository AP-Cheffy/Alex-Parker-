#### NEEEDS WORK

rm(list = ls())
library(ggplot2)
library(stats)
library(reshape2)
library(matrixStats)
library(compiler)
library(tseries)
#Import Data
sr <- as.vector(termstr[,"X3MBR"])
lr <-  as.vector((termstr[,"X10YBR"]))
ex <-  as.vector((termstr[,"ExCan"]))
crd <- as.vector(log((termstr[,"CrVL"])))
cpi <- as.vector((termstr[,"CPI"]))
#Is Stationary?
adf.test(sr)
adf.test(lr)
adf.test(ex)
adf.test(crd)
adf.test(cpi)
# Taking First Differene
dsr <- diff(sr)
dlr <- diff(lr)
dex <- diff(ex)
dcrd <- diff(crd)
pr <- diff(cpi)

#Y is defined in the recursive order _---- Please Update Accordinly
Yraw <- cbind(dsr,dlr,dex,dcrd,pr)
class(Yraw) <- "numeric"
Y <- Yraw 
M <- ncol(Yraw)
# Lag Order, Calibrate, etc..
p = 4
n = length(Y)

varndxv <- c(M,1,p) # For State Space Structure 

# Create Lag Matrix Function For Y_t-1, Y_t-2...... 
# Y is [T x M]. ylag is [T x (Mp)]
Y_l <- function(X,lag)
{
  p <- lag
  X <- as.matrix(X)
  Q <- nrow(X)
  N <- ncol(X)
  Xlag <- matrix(0,Q,p*N)
  for (ii in 1:p){
    Xlag[(p+1):Q,(N*(ii-1)+1):(N*ii)]=X[(p+1-ii):(Q-ii),(1:N)]
  }
  return(Xlag)
}
 

# Apply Function for Y_L, Y is 
Xlag <- Y_l(Y,p)
Y <- Y[(p+1):nrow(Y),,drop=FALSE]
X <- cbind(Xlag[(p+1):nrow(Xlag),],1)

# For SIGMA
K <- ncol(X)
# Estimate VAR by OLS 
A <- solve(t(X) %*% X) %*% t(X)%*%Y
# Residuals
E <- Y - X %*% A
Sigma2 <- cov(E)
# Wrong Order - Upper Triangle 
B_t0 <- chol(Sigma2)
# Make Into Lower Triangle
B_0 <- t(B_t0)


# Impulse Response Function 

IRF <- function(A,B_0,h){}



